name: Deploy

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  deploy_android:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: android-apk
          
      - name: Download App Bundle artifact
        uses: actions/download-artifact@v3
        with:
          name: android-bundle
        
      - name: Upload APK to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./app-release.apk
          asset_name: nokken-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Setup Google Play
        if: github.event_name != 'workflow_dispatch' || github.event.inputs.environment == 'production'
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.yourdomain.nokken
          releaseFiles: ./app-release.aab
          track: production
          status: completed

  deploy_ios:
    needs: create_release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download IPA artifact
        uses: actions/download-artifact@v3
        with:
          name: ios-ipa
        
      - name: Upload IPA to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./Runner.ipa
          asset_name: nokken-${{ github.ref_name }}.ipa
          asset_content_type: application/octet-stream
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          
      - name: Bundle install
        working-directory: ./ios
        run: bundle install
          
      - name: Deploy to App Store
        if: github.event_name != 'workflow_dispatch' || github.event.inputs.environment == 'production'
        working-directory: ./ios
        run: bundle exec fastlane deploy_appstore
        env:
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}

  deploy_desktop:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-build
          
      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: macos-build
          
      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-build
        
      - name: Upload Windows build to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./nokken-windows.zip
          asset_name: nokken-${{ github.ref_name }}-windows.zip
          asset_content_type: application/zip
          
      - name: Upload macOS build to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./nokken-macos.dmg
          asset_name: nokken-${{ github.ref_name }}-macos.dmg
          asset_content_type: application/x-apple-diskimage
          
      - name: Upload Linux build to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./nokken-linux.tar.gz
          asset_name: nokken-${{ github.ref_name }}-linux.tar.gz
          asset_content_type: application/gzip
